#pragma checksum "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "64ce459e8281c1b19bd8107d1fbd4ab0ea7df4b3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Login), @"mvc.1.0.view", @"/Views/Home/Login.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Login.cshtml", typeof(AspNetCore.Views_Home_Login))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI;

#line default
#line hidden
#line 2 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\_ViewImports.cshtml"
using Brandix.DCAP.WebUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"64ce459e8281c1b19bd8107d1fbd4ab0ea7df4b3", @"/Views/Home/Login.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d6ac14fb493c2990ba4a5667bd32d8705427078c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Login : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(32, 512, true);
            WriteLiteral(@"
<script type=""text/javascript"">

    var isValidClient = Answer.Null;
    var clientconfig = null;
    var txUser = null;
    var userId = null;
    var userIdNum = null;
    var password = null;
    var jsonObject = {};

    $(document).ready(function () {
        $('#userLogin').hide();
        $(""#sitebody"").append('<div id=""ajaxBusy"" class=""ajaxBusy""></div>');
        $(""#ajaxBusy"").hide();

        getSessionInfo();

        checkLoginStatus();

        $.ajax({
            url: '");
            EndContext();
            BeginContext(545, 14, false);
#line 25 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(559, 33, true);
            WriteLiteral("/Security/GetClientByIP?clientIP=");
            EndContext();
            BeginContext(593, 16, false);
#line 25 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
                                                             Write(ViewBag.ClientIP);

#line default
#line hidden
            EndContext();
            BeginContext(609, 730, true);
            WriteLiteral(@"',
            type: 'GET',
            dataType: 'json',
            async: false,
            data: jsonObject,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (data) {
                console.log(""output from client config data by client id: "", data);

                if (data != null) {
                    sessionStorage.setItem(""Clientconfig"", JSON.stringify(data));
                    sessionStorage.setItem(""IsValidClient"", Answer.Yes);
                    sessionStorage.setItem(""ClientIP"", '");
            EndContext();
            BeginContext(1340, 16, false);
#line 43 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
                                                   Write(ViewBag.ClientIP);

#line default
#line hidden
            EndContext();
            BeginContext(1356, 3937, true);
            WriteLiteral(@"');
                    aftervalidateclientconfig(data);
                }
                else {
                    sessionStorage.setItem(""Clientconfig"", JSON.stringify([]));
                    sessionStorage.setItem(""IsValidClient"", Answer.Null);
                    sessionStorage.setItem(""ClientIP"", '');
                    aftervalidateclientconfig(data);
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Login"");
            }
        });

    });

    function getSessionInfo() {
        isValidClient = sessionStorage.getItem(""IsValidClient"");
        if (sessionStorage.getItem(""Clientconfig"") != '') {
            clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));
        }
        userPermissionList = JSON.parse(sessionStorage.getItem(""UserPermissionList""));
    }

    function checkLoginStatus() {
        $('#loginBar').hide();
        if (sessionStorage.g");
            WriteLiteral(@"etItem(""IsSignedIn"") != Answer.Null && sessionStorage.getItem(""IsSignedIn"") == Answer.Yes) {
            if (isValidClient != Answer.Null && clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                window.location.href = ""Barcode"";
            }
            else {
                msgBox.show('ඔබට ස්කෑන් කාර්යයන් සඳහා අවසර නැත. කරුණාකර තොරතුරු තාක්ෂණ නිලධාරියෙකු අමතන්න', 'You do not have permission for scan functions. Please contact a IT helpdesk officer', 'අවවාදයයි / Warning', 'LG03', 'Warning', function () {
                    window.location.href = ""Login"";
                });
            }
        }
    }

    function aftervalidateclientconfig(data) {
        $('#userLogin').show();

        sessionStorage.setItem(""IsSignedIn"", Answer.No)
        sessionStorage.setItem(""UserId"", """");

        $('#sitebody').addClass('body-login');
        $('#pageTitleBar').html('<i class=""fas fa-sign-in-alt pageMainIcon""></i><span class=""pageTitle"">DCap - Login</span>');

        c");
            WriteLiteral(@"onsole.log(""clientconfig to validate login mode: "", JSON.parse(sessionStorage.getItem(""Clientconfig"")));
        clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));

        isValidClient = sessionStorage.getItem(""IsValidClient"");

        var userIdTextBox = null;
        console.log(clientconfig, isValidClient);
        if (clientconfig.length == 0) {
            userIdTextBox = $('<label class=""loginMsg"">අක්ෂර / සංඛ්‍යා සහිත පරිශීලක නාමය යොදන්න</label><br><input type=""text"" class=""form-control"" placeholder=""Enter alphanumeric/numeric User ID"" data-validatefor=""required"" id=""usernameTxt"" value="""" autofocus>');
        } else {
            if (clientconfig.loginMode == LoginMode.UsetIdAlfaNum) {
                userIdTextBox = $('<label class=""loginMsg"">අක්ෂර / සංඛ්‍යා සහිත පරිශීලක නාමය යොදන්න</label><br><input type=""text"" class=""form-control"" placeholder=""Enter alphanumeric User ID"" data-validatefor=""required"" id=""usernameTxt"" value="""" autofocus>');
            } else {
         ");
            WriteLiteral(@"       userIdTextBox = $('<label class=""loginMsg"">සංඛ්‍යා පමණක් සහිත පරිශීලක නාමය යොදන්න</label><br><input type=""number"" class=""form-control"" placeholder=""Enter numeric User ID"" autofocus data-validatefor=""required"" id=""usernameTxt"" oninput=""javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"" maxlength=""10"" onkeypress=""return isNumberKey(event,this)"">');
            }
        }
        $('#usernameTxtCell').append(userIdTextBox);
    }

    function signIn() {
        this.userId = $('#usernameTxt').val();
        this.userIdNum = $('#usernameTxt').val();
        this.password = $('#passwordTxt').val();

        var jsonObj = {
            ""UserId"": this.userId,
            ""UserIdNum"": this.userIdNum,
            ""Password"": this.password
        }

        $.ajax({
            url: '");
            EndContext();
            BeginContext(5294, 14, false);
#line 123 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(5308, 1909, true);
            WriteLiteral(@"/Security/GetSecuser?userId=' + jsonObj.UserId + '&userIdNum=' + jsonObj.UserIdNum + '&password=' + jsonObj.Password,
            type: 'GET',
            dataType: 'json',
            async: false,
            data: jsonObj,
            contentType: 'application/json',
            beforeSend: function () {
                $(""#ajaxBusy"").show();
            },
            complete: function () {
                $(""#ajaxBusy"").hide();
            },
            success: function (data) {
                if (data != null) {
                    user = data;

                    sessionStorage.setItem(""TxUser"", JSON.stringify(data));
                    $('#pageTitleBar').html('<i class=""fas fa-barcode pageMainIcon""></i><span class=""pageTitle"">DCap - Login</span>');

                    sessionStorage.setItem(""IsSignedIn"", Answer.Yes);
                    sessionStorage.setItem(""UserId"", data.userId);

                    console.log(""look for empty clientconfig"", sessionStorage.getItem(""Cli");
            WriteLiteral(@"entconfig""));
                    clientconfig = JSON.parse(sessionStorage.getItem(""Clientconfig""));
                    if (clientconfig.length == 0) {
                        getclentconfigbyuserid(data.userId, jsonObj);
                    } else {
                        navigatepage(userId, clientconfig, jsonObj);
                    }
                }
                else {
                    msgBox.show('පරිශීලක නාමය හෝ මුරපදය වැරදිය. කරුණාකර නැවත පරීක්ෂා කරන්න.', 'Invalid User ID or Password. Please check again', 'අවවාදයයි / Warning', 'LG03', 'Warning', null);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Login"");
            }
        });
    }

    function navigatepage(userId, clientconfig, jsonObj) {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(7218, 14, false);
#line 165 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(7232, 2011, true);
            WriteLiteral(@"/Security/GetUserPermissions?userId=' + userId,
            type: 'GET',
            dataType: 'json',
            async: false,
            data: jsonObj,
            contentType: 'application/json',
            success: function (data) {
                if (data != null) {
                    sessionStorage.setItem(""UserPermissionList"", JSON.stringify(data));
                    //console.log(clientconfig.dataCaptureMode);
                    if (clientconfig.dataCaptureMode == DataCaptureMode.Barcode) {
                        window.location.href = ""Barcode"";
                    }
                    else {
                        msgBox.show('ඔබට ස්කෑන් කාර්යයන් සඳහා අවසර නැත. කරුණාකර තොරතුරු තාක්ෂණ නිලධාරියෙකු අමතන්න', 'You do not have permission for scan functions. Please contact a IT helpdesk officer', 'අවවාදයයි / Warning', 'LG01', 'Warning', null);
                    }
                }
                else {
                    msgBox.show('ඔබට මෙම මෘදුකාංගයේ කාර්යයන් සඳහා පරිගණක ");
            WriteLiteral(@"පද්ධතියේ වින්‍යාසයන් සිදු කර නැත. කරුණාකර තොරතුරු තාක්ෂණ නිලධාරියෙකු අමතන්න.', 'Computer system is not configured to you for functions of this software. Please contact a IT helpdesk officer', 'අවවාදයයි / Warning', 'LG02', 'Warning', function () {
                        sessionStorage.setItem(""ErrorSin"", 'ඔබට මෙම මෘදුකාංගයේ කාර්යයන් සඳහා පරිගණක පද්ධතියේ වින්‍යාසයන් සිදු කර නැත. කරුණාකර තොරතුරු තාක්ෂණ නිලධාරියෙකු අමතන්න.');
                        sessionStorage.setItem(""ErrorEng"", 'Computer system is not configured to you for functions of this software. Please contact a IT helpdesk officer');
                        window.location.href = ""Login"";
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Login"");
            }
        });
    }

    function getclentconfigbyuserid(useridfromdata, jsonObj) {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(9244, 14, false);
#line 198 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
             Write(ViewBag.APIURL);

#line default
#line hidden
            EndContext();
            BeginContext(9258, 516, true);
            WriteLiteral(@"/Security/GetClientByUserID?userId=' + useridfromdata,
            type: 'GET',
            dataType: 'json',
            async: false,
            contentType: 'application/json',
            success: function (data) {
                if (data != null) {
                    console.log(data);
                    sessionStorage.setItem(""Clientconfig"", JSON.stringify(data));
                    sessionStorage.setItem(""IsValidClient"", Answer.Yes);
                    sessionStorage.setItem(""ClientIP"", '");
            EndContext();
            BeginContext(9775, 16, false);
#line 208 "C:\Projects\DCap\App\Brandix.DCAP.WebUI - BarcodeScan\Views\Home\Login.cshtml"
                                                   Write(ViewBag.ClientIP);

#line default
#line hidden
            EndContext();
            BeginContext(9791, 2662, true);
            WriteLiteral(@"');
                    navigatepage(userId, data, jsonObj);
                }
                else {
                    msgBox.show('මෙම පරිගණක යන්ත්‍රය හඳුනාගත නොහැක. කරුණාකර තොරතුරු තාක්ෂණ නිලධාරියෙකු අමතන්න.', 'This device cannot be identified. Please contact a IT helpdesk officer', 'අවවාදයයි / Warning', 'LG04', 'Warning', function () {
                        sessionStorage.setItem(""ErrorSin"", 'මෙම පරිගණක යන්ත්‍රය හඳුනාගත නොහැක. කරුණාකර තොරතුරු තාක්ෂණ නිලධාරියෙකු අමතන්න.');
                        sessionStorage.setItem(""ErrorEng"", 'This device cannot be identified. Please contact a IT helpdesk officer');
                        //window.location.href = ""Error"";
                        window.location.href = ""Login"";
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                formatErrorMessage(jqXHR, errorThrown, ""Login"");
            }
        });
    }

    function keyPress(evt, obj) {
        var charCode");
            WriteLiteral(@" = (evt.which) ? evt.which : event.keyCode
        if (charCode == 13)
            validateogin();
        return true;
    }

    function validateogin() {
        if (!validator.validate()) {
            $('#usernameTxt').focus();
            return;
        }
        else {
            signIn();
        }
    }

</script>

<div>
</div>

<div class=""row userLogin"">
    <div class=""col-xs-4""></div>
    <div class=""col-xs-4 userLoginControlWrap personalLogin roundCornerGroupBoxLogin"">
        <div class=""form-control-login"" style=""    margin-top: 35px; margin-bottom: 35px; margin-left: 5px; margin-right: 30px;"">
            <div class=""row"">
                <div class=""col-xs-12 validateCol"" id=""usernameTxtCell"">
                </div>
            </div>
            <div class=""row"">
                <div class=""col-xs-12 validateCol"">
                    <input type=""password"" class=""form-control"" placeholder=""Enter Password""
                        onkeypress=""keyPress(event,t");
            WriteLiteral(@"his)"" data-validatefor=""required"" id=""passwordTxt"" value="""">
                </div>
            </div>
            <div class=""row"">
                <div class=""col-xs-12"">
                    <button type=""button"" id=""loginBtn"" class=""btn btn-primary submitButtonLogin form-control""
                        style=""display: inline-block;"" title=""Submit"" onclick=""signIn()"">
                        <span>Login</span>
                    </button>
                </div>
                <div class=""col-xs-2""></div>
            </div>
        </div>
    </div>
    <div class=""col-xs-4""></div>
</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
